{
  // Place your discord-server-bot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "CommandIndexImport": {
    "scope": "typescript",
    "prefix": "CommandIndexImport",
    "body": ["import { data as Data, execute } from '';"],
    "description": "Slash Command Template"
  },
  "BasicSlashCommand": {
    "scope": "typescript",
    "prefix": "SlashCommandBasic",
    "body": [
      "import { SlashCommand, SlashCreator, CommandContext } from 'slash-create';",
      "import { client } from 'src/helpers/identification';",

      "export default class extends SlashCommand {",
      "  constructor(creator: SlashCreator) {",
      "    super(creator, {",
      "      name: '',",
      "      description: '',",

      "      guildIDs: process.env.DISCORD_GUILD_ID",
      "        ? [process.env.DISCORD_GUILD_ID]",
      "        : undefined,",
      "    });",
      "  }",

      "  async run(context: CommandContext) {",
      "    await context.defer();",
      "    return void context.sendFollowUp({",
      "      content: '',",
      "    });",
      "  }",
      "}"
    ],
    "description": "Slash Command Template"
  },
  "DiscordEvent": {
    "scope": "typescript",
    "prefix": "DiscordEvent",
    "body": [
      "import { Events } from 'discord.js';",
      "",
      "export default {",
      "  name: Events.,",
      "  execute() {",
      "  },",
      "};"
    ],
    "description": "Discord Event Template"
  }
}
